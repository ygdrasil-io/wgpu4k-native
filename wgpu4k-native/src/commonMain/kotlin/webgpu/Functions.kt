// This file has been generated DO NOT EDIT !!!
package webgpu

fun wgpuCreateInstance(descriptor: Long): Long = TODO()
fun wgpuGetInstanceFeatures(features: Long): Unit = TODO()
fun wgpuAdapterGetLimits(limits: Long): UInt = TODO()
fun wgpuAdapterHasFeature(feature: UInt): UInt = TODO()
fun wgpuAdapterEnumerateFeatures(features: UInt): Long = TODO()
fun wgpuAdapterGetInfo(info: Long): Unit = TODO()
fun wgpuAdapterRequestDevice(descriptor: Long): Unit = TODO()
fun wgpuBindGroupSetLabel(label: Long): Unit = TODO()
fun wgpuBindGroupLayoutSetLabel(label: Long): Unit = TODO()
fun wgpuBufferMapAsync(mode: ULong, offset: Long, size: Long): Unit = TODO()
fun wgpuBufferGetMappedRange(offset: Long, size: Long): Unit = TODO()
fun wgpuBufferGetConstMappedRange(offset: Long, size: Long): Unit = TODO()
fun wgpuBufferSetLabel(label: Long): Unit = TODO()
fun wgpuBufferGetUsage(): ULong = TODO()
fun wgpuBufferGetSize(): ULong = TODO()
fun wgpuBufferGetMapState(): UInt = TODO()
fun wgpuBufferUnmap(): Unit = TODO()
fun wgpuBufferDestroy(): Unit = TODO()
fun wgpuCommandBufferSetLabel(label: Long): Unit = TODO()
fun wgpuCommandEncoderFinish(descriptor: Long): Long = TODO()
fun wgpuCommandEncoderBeginComputePass(descriptor: Long): Long = TODO()
fun wgpuCommandEncoderBeginRenderPass(descriptor: Long): Long = TODO()
fun wgpuCommandEncoderCopyBufferToBuffer(source: Long, source_offset: ULong, destination: Long, destination_offset: ULong, size: ULong): Unit = TODO()
fun wgpuCommandEncoderCopyBufferToTexture(source: Long, destination: Long, copy_size: Long): Unit = TODO()
fun wgpuCommandEncoderCopyTextureToBuffer(source: Long, destination: Long, copy_size: Long): Unit = TODO()
fun wgpuCommandEncoderCopyTextureToTexture(source: Long, destination: Long, copy_size: Long): Unit = TODO()
fun wgpuCommandEncoderClearBuffer(buffer: Long, offset: ULong, size: ULong): Unit = TODO()
fun wgpuCommandEncoderInsertDebugMarker(marker_label: Long): Unit = TODO()
fun wgpuCommandEncoderPopDebugGroup(): Unit = TODO()
fun wgpuCommandEncoderPushDebugGroup(group_label: Long): Unit = TODO()
fun wgpuCommandEncoderResolveQuerySet(query_set: Long, first_query: UInt, query_count: UInt, destination: Long, destination_offset: ULong): Unit = TODO()
fun wgpuCommandEncoderWriteTimestamp(query_set: Long, query_index: UInt): Unit = TODO()
fun wgpuCommandEncoderSetLabel(label: Long): Unit = TODO()
fun wgpuComputePassEncoderInsertDebugMarker(marker_label: Long): Unit = TODO()
fun wgpuComputePassEncoderPopDebugGroup(): Unit = TODO()
fun wgpuComputePassEncoderPushDebugGroup(group_label: Long): Unit = TODO()
fun wgpuComputePassEncoderSetPipeline(pipeline: Long): Unit = TODO()
fun wgpuComputePassEncoderSetBindGroup(group_index: UInt, group: Long, dynamic_offsets: Long): Unit = TODO()
fun wgpuComputePassEncoderDispatchWorkgroups(workgroupCountX: UInt, workgroupCountY: UInt, workgroupCountZ: UInt): Unit = TODO()
fun wgpuComputePassEncoderDispatchWorkgroupsIndirect(indirect_buffer: Long, indirect_offset: ULong): Unit = TODO()
fun wgpuComputePassEncoderEnd(): Unit = TODO()
fun wgpuComputePassEncoderSetLabel(label: Long): Unit = TODO()
fun wgpuComputePipelineGetBindGroupLayout(group_index: UInt): Long = TODO()
fun wgpuComputePipelineSetLabel(label: Long): Unit = TODO()
fun wgpuDeviceCreateBindGroup(descriptor: Long): Long = TODO()
fun wgpuDeviceCreateBindGroupLayout(descriptor: Long): Long = TODO()
fun wgpuDeviceCreateBuffer(descriptor: Long): Long = TODO()
fun wgpuDeviceCreateCommandEncoder(descriptor: Long): Long = TODO()
fun wgpuDeviceCreateComputePipeline(descriptor: Long): Long = TODO()
fun wgpuDeviceCreateComputePipelineAsync(descriptor: Long): Unit = TODO()
fun wgpuDeviceCreatePipelineLayout(descriptor: Long): Long = TODO()
fun wgpuDeviceCreateQuerySet(descriptor: Long): Long = TODO()
fun wgpuDeviceCreateRenderPipelineAsync(descriptor: Long): Unit = TODO()
fun wgpuDeviceCreateRenderBundleEncoder(descriptor: Long): Long = TODO()
fun wgpuDeviceCreateRenderPipeline(descriptor: Long): Long = TODO()
fun wgpuDeviceCreateSampler(descriptor: Long): Long = TODO()
fun wgpuDeviceCreateShaderModule(descriptor: Long): Long = TODO()
fun wgpuDeviceCreateTexture(descriptor: Long): Long = TODO()
fun wgpuDeviceDestroy(): Unit = TODO()
fun wgpuDeviceGetLimits(limits: Long): UInt = TODO()
fun wgpuDeviceHasFeature(feature: UInt): UInt = TODO()
fun wgpuDeviceEnumerateFeatures(features: UInt): Long = TODO()
fun wgpuDeviceGetQueue(): Long = TODO()
fun wgpuDevicePushErrorScope(filter: UInt): Unit = TODO()
fun wgpuDevicePopErrorScope(): Unit = TODO()
fun wgpuDeviceSetLabel(label: Long): Unit = TODO()
fun wgpuInstanceCreateSurface(descriptor: Long): Long = TODO()
fun wgpuInstanceHasWGSLLanguageFeature(feature: UInt): UInt = TODO()
fun wgpuInstanceProcessEvents(): Unit = TODO()
fun wgpuInstanceRequestAdapter(options: Long): Unit = TODO()
fun wgpuInstanceWaitAny(future_count: Long, futures: Long, timeout_NS: ULong): UInt = TODO()
fun wgpuPipelineLayoutSetLabel(label: Long): Unit = TODO()
fun wgpuQuerySetSetLabel(label: Long): Unit = TODO()
fun wgpuQuerySetGetType(): UInt = TODO()
fun wgpuQuerySetGetCount(): UInt = TODO()
fun wgpuQuerySetDestroy(): Unit = TODO()
fun wgpuQueueSubmit(commands: Long): Unit = TODO()
fun wgpuQueueOnSubmittedWorkDone(): Unit = TODO()
fun wgpuQueueWriteBuffer(buffer: Long, buffer_offset: ULong, data: Unit, size: Long): Unit = TODO()
fun wgpuQueueWriteTexture(destination: Long, data: Unit, data_size: Long, data_layout: Long, write_size: Long): Unit = TODO()
fun wgpuQueueSetLabel(label: Long): Unit = TODO()
fun wgpuRenderBundleSetLabel(label: Long): Unit = TODO()
fun wgpuRenderBundleEncoderSetPipeline(pipeline: Long): Unit = TODO()
fun wgpuRenderBundleEncoderSetBindGroup(group_index: UInt, group: Long, dynamic_offsets: Long): Unit = TODO()
fun wgpuRenderBundleEncoderDraw(vertex_count: UInt, instance_count: UInt, first_vertex: UInt, first_instance: UInt): Unit = TODO()
fun wgpuRenderBundleEncoderDrawIndexed(index_count: UInt, instance_count: UInt, first_index: UInt, base_vertex: Int, first_instance: UInt): Unit = TODO()
fun wgpuRenderBundleEncoderDrawIndirect(indirect_buffer: Long, indirect_offset: ULong): Unit = TODO()
fun wgpuRenderBundleEncoderDrawIndexedIndirect(indirect_buffer: Long, indirect_offset: ULong): Unit = TODO()
fun wgpuRenderBundleEncoderInsertDebugMarker(marker_label: Long): Unit = TODO()
fun wgpuRenderBundleEncoderPopDebugGroup(): Unit = TODO()
fun wgpuRenderBundleEncoderPushDebugGroup(group_label: Long): Unit = TODO()
fun wgpuRenderBundleEncoderSetVertexBuffer(slot: UInt, buffer: Long, offset: ULong, size: ULong): Unit = TODO()
fun wgpuRenderBundleEncoderSetIndexBuffer(buffer: Long, format: UInt, offset: ULong, size: ULong): Unit = TODO()
fun wgpuRenderBundleEncoderFinish(descriptor: Long): Long = TODO()
fun wgpuRenderBundleEncoderSetLabel(label: Long): Unit = TODO()
fun wgpuRenderPassEncoderSetPipeline(pipeline: Long): Unit = TODO()
fun wgpuRenderPassEncoderSetBindGroup(group_index: UInt, group: Long, dynamic_offsets: Long): Unit = TODO()
fun wgpuRenderPassEncoderDraw(vertex_count: UInt, instance_count: UInt, first_vertex: UInt, first_instance: UInt): Unit = TODO()
fun wgpuRenderPassEncoderDrawIndexed(index_count: UInt, instance_count: UInt, first_index: UInt, base_vertex: Int, first_instance: UInt): Unit = TODO()
fun wgpuRenderPassEncoderDrawIndirect(indirect_buffer: Long, indirect_offset: ULong): Unit = TODO()
fun wgpuRenderPassEncoderDrawIndexedIndirect(indirect_buffer: Long, indirect_offset: ULong): Unit = TODO()
fun wgpuRenderPassEncoderExecuteBundles(bundles: Long): Unit = TODO()
fun wgpuRenderPassEncoderInsertDebugMarker(marker_label: Long): Unit = TODO()
fun wgpuRenderPassEncoderPopDebugGroup(): Unit = TODO()
fun wgpuRenderPassEncoderPushDebugGroup(group_label: Long): Unit = TODO()
fun wgpuRenderPassEncoderSetStencilReference(reference: UInt): Unit = TODO()
fun wgpuRenderPassEncoderSetBlendConstant(color: Long): Unit = TODO()
fun wgpuRenderPassEncoderSetViewport(x: Float, y: Float, width: Float, height: Float, min_depth: Float, max_depth: Float): Unit = TODO()
fun wgpuRenderPassEncoderSetScissorRect(x: UInt, y: UInt, width: UInt, height: UInt): Unit = TODO()
fun wgpuRenderPassEncoderSetVertexBuffer(slot: UInt, buffer: Long, offset: ULong, size: ULong): Unit = TODO()
fun wgpuRenderPassEncoderSetIndexBuffer(buffer: Long, format: UInt, offset: ULong, size: ULong): Unit = TODO()
fun wgpuRenderPassEncoderBeginOcclusionQuery(query_index: UInt): Unit = TODO()
fun wgpuRenderPassEncoderEndOcclusionQuery(): Unit = TODO()
fun wgpuRenderPassEncoderEnd(): Unit = TODO()
fun wgpuRenderPassEncoderSetLabel(label: Long): Unit = TODO()
fun wgpuRenderPipelineGetBindGroupLayout(group_index: UInt): Long = TODO()
fun wgpuRenderPipelineSetLabel(label: Long): Unit = TODO()
fun wgpuSamplerSetLabel(label: Long): Unit = TODO()
fun wgpuShaderModuleGetCompilationInfo(): Unit = TODO()
fun wgpuShaderModuleSetLabel(label: Long): Unit = TODO()
fun wgpuSurfaceConfigure(config: Long): Unit = TODO()
fun wgpuSurfaceGetCapabilities(adapter: Long, capabilities: Long): UInt = TODO()
fun wgpuSurfaceGetCurrentTexture(surface_texture: Long): Unit = TODO()
fun wgpuSurfacePresent(): Unit = TODO()
fun wgpuSurfaceUnconfigure(): Unit = TODO()
fun wgpuSurfaceSetLabel(label: Long): Unit = TODO()
fun wgpuTextureCreateView(descriptor: Long): Long = TODO()
fun wgpuTextureSetLabel(label: Long): Unit = TODO()
fun wgpuTextureGetWidth(): UInt = TODO()
fun wgpuTextureGetHeight(): UInt = TODO()
fun wgpuTextureGetDepthOrArrayLayers(): UInt = TODO()
fun wgpuTextureGetMipLevelCount(): UInt = TODO()
fun wgpuTextureGetSampleCount(): UInt = TODO()
fun wgpuTextureGetDimension(): UInt = TODO()
fun wgpuTextureGetFormat(): UInt = TODO()
fun wgpuTextureGetUsage(): ULong = TODO()
fun wgpuTextureDestroy(): Unit = TODO()
fun wgpuTextureViewSetLabel(label: Long): Unit = TODO()
