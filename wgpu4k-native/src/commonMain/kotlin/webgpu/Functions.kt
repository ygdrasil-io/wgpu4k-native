// This file has been generated DO NOT EDIT !!!
package webgpu

fun wgpuCreateInstance(descriptor: Long): Long = TODO()
fun wgpuGetInstanceFeatures(features: Long): Unit = TODO()
// methods of WGPUAdapter
fun wgpuAdapterGetLimits(handler: Long, limits: Long): UInt = TODO()
fun wgpuAdapterHasFeature(handler: Long, feature: UInt): UInt = TODO()
fun wgpuAdapterEnumerateFeatures(handler: Long, features: UInt): Long = TODO()
fun wgpuAdapterGetInfo(handler: Long, info: Long): Unit = TODO()
fun wgpuAdapterRequestDevice(handler: Long, descriptor: Long): Unit = TODO()
// methods of WGPUBindGroup
fun wgpuBindGroupSetLabel(handler: Long, label: Long): Unit = TODO()
// methods of WGPUBindGroupLayout
fun wgpuBindGroupLayoutSetLabel(handler: Long, label: Long): Unit = TODO()
// methods of WGPUBuffer
fun wgpuBufferMapAsync(handler: Long, mode: ULong, offset: Long, size: Long): Unit = TODO()
fun wgpuBufferGetMappedRange(handler: Long, offset: Long, size: Long): Unit = TODO()
fun wgpuBufferGetConstMappedRange(handler: Long, offset: Long, size: Long): Unit = TODO()
fun wgpuBufferSetLabel(handler: Long, label: Long): Unit = TODO()
fun wgpuBufferGetUsage(handler: Long): ULong = TODO()
fun wgpuBufferGetSize(handler: Long): ULong = TODO()
fun wgpuBufferGetMapState(handler: Long): UInt = TODO()
fun wgpuBufferUnmap(handler: Long): Unit = TODO()
fun wgpuBufferDestroy(handler: Long): Unit = TODO()
// methods of WGPUCommandBuffer
fun wgpuCommandBufferSetLabel(handler: Long, label: Long): Unit = TODO()
// methods of WGPUCommandEncoder
fun wgpuCommandEncoderFinish(handler: Long, descriptor: Long): Long = TODO()
fun wgpuCommandEncoderBeginComputePass(handler: Long, descriptor: Long): Long = TODO()
fun wgpuCommandEncoderBeginRenderPass(handler: Long, descriptor: Long): Long = TODO()
fun wgpuCommandEncoderCopyBufferToBuffer(handler: Long, source: Long, source_offset: ULong, destination: Long, destination_offset: ULong, size: ULong): Unit = TODO()
fun wgpuCommandEncoderCopyBufferToTexture(handler: Long, source: Long, destination: Long, copy_size: Long): Unit = TODO()
fun wgpuCommandEncoderCopyTextureToBuffer(handler: Long, source: Long, destination: Long, copy_size: Long): Unit = TODO()
fun wgpuCommandEncoderCopyTextureToTexture(handler: Long, source: Long, destination: Long, copy_size: Long): Unit = TODO()
fun wgpuCommandEncoderClearBuffer(handler: Long, buffer: Long, offset: ULong, size: ULong): Unit = TODO()
fun wgpuCommandEncoderInsertDebugMarker(handler: Long, marker_label: Long): Unit = TODO()
fun wgpuCommandEncoderPopDebugGroup(handler: Long): Unit = TODO()
fun wgpuCommandEncoderPushDebugGroup(handler: Long, group_label: Long): Unit = TODO()
fun wgpuCommandEncoderResolveQuerySet(handler: Long, query_set: Long, first_query: UInt, query_count: UInt, destination: Long, destination_offset: ULong): Unit = TODO()
fun wgpuCommandEncoderWriteTimestamp(handler: Long, query_set: Long, query_index: UInt): Unit = TODO()
fun wgpuCommandEncoderSetLabel(handler: Long, label: Long): Unit = TODO()
// methods of WGPUComputePassEncoder
fun wgpuComputePassEncoderInsertDebugMarker(handler: Long, marker_label: Long): Unit = TODO()
fun wgpuComputePassEncoderPopDebugGroup(handler: Long): Unit = TODO()
fun wgpuComputePassEncoderPushDebugGroup(handler: Long, group_label: Long): Unit = TODO()
fun wgpuComputePassEncoderSetPipeline(handler: Long, pipeline: Long): Unit = TODO()
fun wgpuComputePassEncoderSetBindGroup(handler: Long, group_index: UInt, group: Long, dynamic_offsets: Long): Unit = TODO()
fun wgpuComputePassEncoderDispatchWorkgroups(handler: Long, workgroupCountX: UInt, workgroupCountY: UInt, workgroupCountZ: UInt): Unit = TODO()
fun wgpuComputePassEncoderDispatchWorkgroupsIndirect(handler: Long, indirect_buffer: Long, indirect_offset: ULong): Unit = TODO()
fun wgpuComputePassEncoderEnd(handler: Long): Unit = TODO()
fun wgpuComputePassEncoderSetLabel(handler: Long, label: Long): Unit = TODO()
// methods of WGPUComputePipeline
fun wgpuComputePipelineGetBindGroupLayout(handler: Long, group_index: UInt): Long = TODO()
fun wgpuComputePipelineSetLabel(handler: Long, label: Long): Unit = TODO()
// methods of WGPUDevice
fun wgpuDeviceCreateBindGroup(handler: Long, descriptor: Long): Long = TODO()
fun wgpuDeviceCreateBindGroupLayout(handler: Long, descriptor: Long): Long = TODO()
fun wgpuDeviceCreateBuffer(handler: Long, descriptor: Long): Long = TODO()
fun wgpuDeviceCreateCommandEncoder(handler: Long, descriptor: Long): Long = TODO()
fun wgpuDeviceCreateComputePipeline(handler: Long, descriptor: Long): Long = TODO()
fun wgpuDeviceCreateComputePipelineAsync(handler: Long, descriptor: Long): Unit = TODO()
fun wgpuDeviceCreatePipelineLayout(handler: Long, descriptor: Long): Long = TODO()
fun wgpuDeviceCreateQuerySet(handler: Long, descriptor: Long): Long = TODO()
fun wgpuDeviceCreateRenderPipelineAsync(handler: Long, descriptor: Long): Unit = TODO()
fun wgpuDeviceCreateRenderBundleEncoder(handler: Long, descriptor: Long): Long = TODO()
fun wgpuDeviceCreateRenderPipeline(handler: Long, descriptor: Long): Long = TODO()
fun wgpuDeviceCreateSampler(handler: Long, descriptor: Long): Long = TODO()
fun wgpuDeviceCreateShaderModule(handler: Long, descriptor: Long): Long = TODO()
fun wgpuDeviceCreateTexture(handler: Long, descriptor: Long): Long = TODO()
fun wgpuDeviceDestroy(handler: Long): Unit = TODO()
fun wgpuDeviceGetLimits(handler: Long, limits: Long): UInt = TODO()
fun wgpuDeviceHasFeature(handler: Long, feature: UInt): UInt = TODO()
fun wgpuDeviceEnumerateFeatures(handler: Long, features: UInt): Long = TODO()
fun wgpuDeviceGetQueue(handler: Long): Long = TODO()
fun wgpuDevicePushErrorScope(handler: Long, filter: UInt): Unit = TODO()
fun wgpuDevicePopErrorScope(handler: Long): Unit = TODO()
fun wgpuDeviceSetLabel(handler: Long, label: Long): Unit = TODO()
// methods of WGPUInstance
fun wgpuInstanceCreateSurface(handler: Long, descriptor: Long): Long = TODO()
fun wgpuInstanceHasWGSLLanguageFeature(handler: Long, feature: UInt): UInt = TODO()
fun wgpuInstanceProcessEvents(handler: Long): Unit = TODO()
fun wgpuInstanceRequestAdapter(handler: Long, options: Long): Unit = TODO()
fun wgpuInstanceWaitAny(handler: Long, future_count: Long, futures: Long, timeout_NS: ULong): UInt = TODO()
// methods of WGPUPipelineLayout
fun wgpuPipelineLayoutSetLabel(handler: Long, label: Long): Unit = TODO()
// methods of WGPUQuerySet
fun wgpuQuerySetSetLabel(handler: Long, label: Long): Unit = TODO()
fun wgpuQuerySetGetType(handler: Long): UInt = TODO()
fun wgpuQuerySetGetCount(handler: Long): UInt = TODO()
fun wgpuQuerySetDestroy(handler: Long): Unit = TODO()
// methods of WGPUQueue
fun wgpuQueueSubmit(handler: Long, commands: Long): Unit = TODO()
fun wgpuQueueOnSubmittedWorkDone(handler: Long): Unit = TODO()
fun wgpuQueueWriteBuffer(handler: Long, buffer: Long, buffer_offset: ULong, data: Unit, size: Long): Unit = TODO()
fun wgpuQueueWriteTexture(handler: Long, destination: Long, data: Unit, data_size: Long, data_layout: Long, write_size: Long): Unit = TODO()
fun wgpuQueueSetLabel(handler: Long, label: Long): Unit = TODO()
// methods of WGPURenderBundle
fun wgpuRenderBundleSetLabel(handler: Long, label: Long): Unit = TODO()
// methods of WGPURenderBundleEncoder
fun wgpuRenderBundleEncoderSetPipeline(handler: Long, pipeline: Long): Unit = TODO()
fun wgpuRenderBundleEncoderSetBindGroup(handler: Long, group_index: UInt, group: Long, dynamic_offsets: Long): Unit = TODO()
fun wgpuRenderBundleEncoderDraw(handler: Long, vertex_count: UInt, instance_count: UInt, first_vertex: UInt, first_instance: UInt): Unit = TODO()
fun wgpuRenderBundleEncoderDrawIndexed(handler: Long, index_count: UInt, instance_count: UInt, first_index: UInt, base_vertex: Int, first_instance: UInt): Unit = TODO()
fun wgpuRenderBundleEncoderDrawIndirect(handler: Long, indirect_buffer: Long, indirect_offset: ULong): Unit = TODO()
fun wgpuRenderBundleEncoderDrawIndexedIndirect(handler: Long, indirect_buffer: Long, indirect_offset: ULong): Unit = TODO()
fun wgpuRenderBundleEncoderInsertDebugMarker(handler: Long, marker_label: Long): Unit = TODO()
fun wgpuRenderBundleEncoderPopDebugGroup(handler: Long): Unit = TODO()
fun wgpuRenderBundleEncoderPushDebugGroup(handler: Long, group_label: Long): Unit = TODO()
fun wgpuRenderBundleEncoderSetVertexBuffer(handler: Long, slot: UInt, buffer: Long, offset: ULong, size: ULong): Unit = TODO()
fun wgpuRenderBundleEncoderSetIndexBuffer(handler: Long, buffer: Long, format: UInt, offset: ULong, size: ULong): Unit = TODO()
fun wgpuRenderBundleEncoderFinish(handler: Long, descriptor: Long): Long = TODO()
fun wgpuRenderBundleEncoderSetLabel(handler: Long, label: Long): Unit = TODO()
// methods of WGPURenderPassEncoder
fun wgpuRenderPassEncoderSetPipeline(handler: Long, pipeline: Long): Unit = TODO()
fun wgpuRenderPassEncoderSetBindGroup(handler: Long, group_index: UInt, group: Long, dynamic_offsets: Long): Unit = TODO()
fun wgpuRenderPassEncoderDraw(handler: Long, vertex_count: UInt, instance_count: UInt, first_vertex: UInt, first_instance: UInt): Unit = TODO()
fun wgpuRenderPassEncoderDrawIndexed(handler: Long, index_count: UInt, instance_count: UInt, first_index: UInt, base_vertex: Int, first_instance: UInt): Unit = TODO()
fun wgpuRenderPassEncoderDrawIndirect(handler: Long, indirect_buffer: Long, indirect_offset: ULong): Unit = TODO()
fun wgpuRenderPassEncoderDrawIndexedIndirect(handler: Long, indirect_buffer: Long, indirect_offset: ULong): Unit = TODO()
fun wgpuRenderPassEncoderExecuteBundles(handler: Long, bundles: Long): Unit = TODO()
fun wgpuRenderPassEncoderInsertDebugMarker(handler: Long, marker_label: Long): Unit = TODO()
fun wgpuRenderPassEncoderPopDebugGroup(handler: Long): Unit = TODO()
fun wgpuRenderPassEncoderPushDebugGroup(handler: Long, group_label: Long): Unit = TODO()
fun wgpuRenderPassEncoderSetStencilReference(handler: Long, reference: UInt): Unit = TODO()
fun wgpuRenderPassEncoderSetBlendConstant(handler: Long, color: Long): Unit = TODO()
fun wgpuRenderPassEncoderSetViewport(handler: Long, x: Float, y: Float, width: Float, height: Float, min_depth: Float, max_depth: Float): Unit = TODO()
fun wgpuRenderPassEncoderSetScissorRect(handler: Long, x: UInt, y: UInt, width: UInt, height: UInt): Unit = TODO()
fun wgpuRenderPassEncoderSetVertexBuffer(handler: Long, slot: UInt, buffer: Long, offset: ULong, size: ULong): Unit = TODO()
fun wgpuRenderPassEncoderSetIndexBuffer(handler: Long, buffer: Long, format: UInt, offset: ULong, size: ULong): Unit = TODO()
fun wgpuRenderPassEncoderBeginOcclusionQuery(handler: Long, query_index: UInt): Unit = TODO()
fun wgpuRenderPassEncoderEndOcclusionQuery(handler: Long): Unit = TODO()
fun wgpuRenderPassEncoderEnd(handler: Long): Unit = TODO()
fun wgpuRenderPassEncoderSetLabel(handler: Long, label: Long): Unit = TODO()
// methods of WGPURenderPipeline
fun wgpuRenderPipelineGetBindGroupLayout(handler: Long, group_index: UInt): Long = TODO()
fun wgpuRenderPipelineSetLabel(handler: Long, label: Long): Unit = TODO()
// methods of WGPUSampler
fun wgpuSamplerSetLabel(handler: Long, label: Long): Unit = TODO()
// methods of WGPUShaderModule
fun wgpuShaderModuleGetCompilationInfo(handler: Long): Unit = TODO()
fun wgpuShaderModuleSetLabel(handler: Long, label: Long): Unit = TODO()
// methods of WGPUSurface
fun wgpuSurfaceConfigure(handler: Long, config: Long): Unit = TODO()
fun wgpuSurfaceGetCapabilities(handler: Long, adapter: Long, capabilities: Long): UInt = TODO()
fun wgpuSurfaceGetCurrentTexture(handler: Long, surface_texture: Long): Unit = TODO()
fun wgpuSurfacePresent(handler: Long): Unit = TODO()
fun wgpuSurfaceUnconfigure(handler: Long): Unit = TODO()
fun wgpuSurfaceSetLabel(handler: Long, label: Long): Unit = TODO()
// methods of WGPUTexture
fun wgpuTextureCreateView(handler: Long, descriptor: Long): Long = TODO()
fun wgpuTextureSetLabel(handler: Long, label: Long): Unit = TODO()
fun wgpuTextureGetWidth(handler: Long): UInt = TODO()
fun wgpuTextureGetHeight(handler: Long): UInt = TODO()
fun wgpuTextureGetDepthOrArrayLayers(handler: Long): UInt = TODO()
fun wgpuTextureGetMipLevelCount(handler: Long): UInt = TODO()
fun wgpuTextureGetSampleCount(handler: Long): UInt = TODO()
fun wgpuTextureGetDimension(handler: Long): UInt = TODO()
fun wgpuTextureGetFormat(handler: Long): UInt = TODO()
fun wgpuTextureGetUsage(handler: Long): ULong = TODO()
fun wgpuTextureDestroy(handler: Long): Unit = TODO()
// methods of WGPUTextureView
fun wgpuTextureViewSetLabel(handler: Long, label: Long): Unit = TODO()
