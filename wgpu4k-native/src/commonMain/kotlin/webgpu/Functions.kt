// This file has been generated DO NOT EDIT !!!
package webgpu

import ffi.CString
import ffi.NativeAddress


fun wgpuCreateInstance(descriptor: WGPUInstanceDescriptor): WGPUInstance = TODO()
fun wgpuGetInstanceFeatures(features: WGPUInstanceFeatures): Unit = TODO()
fun wgpuAdapterGetLimits(handler: WGPUAdapter, limits: WGPUSupportedLimits): Boolean = TODO()
fun wgpuAdapterHasFeature(handler: WGPUAdapter, feature: WGPUFeatureName): Boolean = TODO()
fun wgpuAdapterEnumerateFeatures(handler: WGPUAdapter, features: WGPUFeatureName): ULong = TODO()
fun wgpuAdapterGetInfo(handler: WGPUAdapter, info: WGPUAdapterInfo): Unit = TODO()
fun wgpuAdapterRequestDevice(handler: WGPUAdapter, descriptor: WGPUDeviceDescriptor): Unit = TODO()
fun wgpuBindGroupSetLabel(handler: WGPUBindGroup, label: CString): Unit = TODO()
fun wgpuBindGroupLayoutSetLabel(handler: WGPUBindGroupLayout, label: CString): Unit = TODO()
fun wgpuBufferMapAsync(handler: WGPUBuffer, mode: ULong, offset: ULong, size: ULong): Unit = TODO()
fun wgpuBufferGetMappedRange(handler: WGPUBuffer, offset: ULong, size: ULong): Unit = TODO()
fun wgpuBufferGetConstMappedRange(handler: WGPUBuffer, offset: ULong, size: ULong): Unit = TODO()
fun wgpuBufferSetLabel(handler: WGPUBuffer, label: CString): Unit = TODO()
fun wgpuBufferGetUsage(handler: WGPUBuffer): ULong = TODO()
fun wgpuBufferGetSize(handler: WGPUBuffer): ULong = TODO()
fun wgpuBufferGetMapState(handler: WGPUBuffer): WGPUBufferMapState = TODO()
fun wgpuBufferUnmap(handler: WGPUBuffer): Unit = TODO()
fun wgpuBufferDestroy(handler: WGPUBuffer): Unit = TODO()
fun wgpuCommandBufferSetLabel(handler: WGPUCommandBuffer, label: CString): Unit = TODO()
fun wgpuCommandEncoderFinish(handler: WGPUCommandEncoder, descriptor: WGPUCommandBufferDescriptor): WGPUCommandBuffer = TODO()
fun wgpuCommandEncoderBeginComputePass(handler: WGPUCommandEncoder, descriptor: WGPUComputePassDescriptor): WGPUComputePassEncoder = TODO()
fun wgpuCommandEncoderBeginRenderPass(handler: WGPUCommandEncoder, descriptor: WGPURenderPassDescriptor): WGPURenderPassEncoder = TODO()
fun wgpuCommandEncoderCopyBufferToBuffer(handler: WGPUCommandEncoder, source: WGPUBuffer, sourceOffset: ULong, destination: WGPUBuffer, destinationOffset: ULong, size: ULong): Unit = TODO()
fun wgpuCommandEncoderCopyBufferToTexture(handler: WGPUCommandEncoder, source: WGPUImageCopyBuffer, destination: WGPUImageCopyTexture, copySize: WGPUExtent3D): Unit = TODO()
fun wgpuCommandEncoderCopyTextureToBuffer(handler: WGPUCommandEncoder, source: WGPUImageCopyTexture, destination: WGPUImageCopyBuffer, copySize: WGPUExtent3D): Unit = TODO()
fun wgpuCommandEncoderCopyTextureToTexture(handler: WGPUCommandEncoder, source: WGPUImageCopyTexture, destination: WGPUImageCopyTexture, copySize: WGPUExtent3D): Unit = TODO()
fun wgpuCommandEncoderClearBuffer(handler: WGPUCommandEncoder, buffer: WGPUBuffer, offset: ULong, size: ULong): Unit = TODO()
fun wgpuCommandEncoderInsertDebugMarker(handler: WGPUCommandEncoder, markerLabel: CString): Unit = TODO()
fun wgpuCommandEncoderPopDebugGroup(handler: WGPUCommandEncoder): Unit = TODO()
fun wgpuCommandEncoderPushDebugGroup(handler: WGPUCommandEncoder, groupLabel: CString): Unit = TODO()
fun wgpuCommandEncoderResolveQuerySet(handler: WGPUCommandEncoder, querySet: WGPUQuerySet, firstQuery: UInt, queryCount: UInt, destination: WGPUBuffer, destinationOffset: ULong): Unit = TODO()
fun wgpuCommandEncoderWriteTimestamp(handler: WGPUCommandEncoder, querySet: WGPUQuerySet, queryIndex: UInt): Unit = TODO()
fun wgpuCommandEncoderSetLabel(handler: WGPUCommandEncoder, label: CString): Unit = TODO()
fun wgpuComputePassEncoderInsertDebugMarker(handler: WGPUComputePassEncoder, markerLabel: CString): Unit = TODO()
fun wgpuComputePassEncoderPopDebugGroup(handler: WGPUComputePassEncoder): Unit = TODO()
fun wgpuComputePassEncoderPushDebugGroup(handler: WGPUComputePassEncoder, groupLabel: CString): Unit = TODO()
fun wgpuComputePassEncoderSetPipeline(handler: WGPUComputePassEncoder, pipeline: WGPUComputePipeline): Unit = TODO()
fun wgpuComputePassEncoderSetBindGroup(handler: WGPUComputePassEncoder, groupIndex: UInt, group: WGPUBindGroup, dynamicOffsets: Long): Unit = TODO()
fun wgpuComputePassEncoderDispatchWorkgroups(handler: WGPUComputePassEncoder, workgroupCountX: UInt, workgroupCountY: UInt, workgroupCountZ: UInt): Unit = TODO()
fun wgpuComputePassEncoderDispatchWorkgroupsIndirect(handler: WGPUComputePassEncoder, indirectBuffer: WGPUBuffer, indirectOffset: ULong): Unit = TODO()
fun wgpuComputePassEncoderEnd(handler: WGPUComputePassEncoder): Unit = TODO()
fun wgpuComputePassEncoderSetLabel(handler: WGPUComputePassEncoder, label: CString): Unit = TODO()
fun wgpuComputePipelineGetBindGroupLayout(handler: WGPUComputePipeline, groupIndex: UInt): WGPUBindGroupLayout = TODO()
fun wgpuComputePipelineSetLabel(handler: WGPUComputePipeline, label: CString): Unit = TODO()
fun wgpuDeviceCreateBindGroup(handler: WGPUDevice, descriptor: WGPUBindGroupDescriptor): WGPUBindGroup = TODO()
fun wgpuDeviceCreateBindGroupLayout(handler: WGPUDevice, descriptor: WGPUBindGroupLayoutDescriptor): WGPUBindGroupLayout = TODO()
fun wgpuDeviceCreateBuffer(handler: WGPUDevice, descriptor: WGPUBufferDescriptor): WGPUBuffer = TODO()
fun wgpuDeviceCreateCommandEncoder(handler: WGPUDevice, descriptor: WGPUCommandEncoderDescriptor): WGPUCommandEncoder = TODO()
fun wgpuDeviceCreateComputePipeline(handler: WGPUDevice, descriptor: WGPUComputePipelineDescriptor): WGPUComputePipeline = TODO()
fun wgpuDeviceCreateComputePipelineAsync(handler: WGPUDevice, descriptor: WGPUComputePipelineDescriptor): Unit = TODO()
fun wgpuDeviceCreatePipelineLayout(handler: WGPUDevice, descriptor: WGPUPipelineLayoutDescriptor): WGPUPipelineLayout = TODO()
fun wgpuDeviceCreateQuerySet(handler: WGPUDevice, descriptor: WGPUQuerySetDescriptor): WGPUQuerySet = TODO()
fun wgpuDeviceCreateRenderPipelineAsync(handler: WGPUDevice, descriptor: WGPURenderPipelineDescriptor): Unit = TODO()
fun wgpuDeviceCreateRenderBundleEncoder(handler: WGPUDevice, descriptor: WGPURenderBundleEncoderDescriptor): WGPURenderBundleEncoder = TODO()
fun wgpuDeviceCreateRenderPipeline(handler: WGPUDevice, descriptor: WGPURenderPipelineDescriptor): WGPURenderPipeline = TODO()
fun wgpuDeviceCreateSampler(handler: WGPUDevice, descriptor: WGPUSamplerDescriptor): WGPUSampler = TODO()
fun wgpuDeviceCreateShaderModule(handler: WGPUDevice, descriptor: WGPUShaderModuleDescriptor): WGPUShaderModule = TODO()
fun wgpuDeviceCreateTexture(handler: WGPUDevice, descriptor: WGPUTextureDescriptor): WGPUTexture = TODO()
fun wgpuDeviceDestroy(handler: WGPUDevice): Unit = TODO()
fun wgpuDeviceGetLimits(handler: WGPUDevice, limits: WGPUSupportedLimits): Boolean = TODO()
fun wgpuDeviceHasFeature(handler: WGPUDevice, feature: WGPUFeatureName): Boolean = TODO()
fun wgpuDeviceEnumerateFeatures(handler: WGPUDevice, features: WGPUFeatureName): ULong = TODO()
fun wgpuDeviceGetQueue(handler: WGPUDevice): WGPUQueue = TODO()
fun wgpuDevicePushErrorScope(handler: WGPUDevice, filter: WGPUErrorFilter): Unit = TODO()
fun wgpuDevicePopErrorScope(handler: WGPUDevice): Unit = TODO()
fun wgpuDeviceSetLabel(handler: WGPUDevice, label: CString): Unit = TODO()
fun wgpuInstanceCreateSurface(handler: WGPUInstance, descriptor: WGPUSurfaceDescriptor): WGPUSurface = TODO()
fun wgpuInstanceHasWGSLLanguageFeature(handler: WGPUInstance, feature: WGPUWGSLFeatureName): Boolean = TODO()
fun wgpuInstanceProcessEvents(handler: WGPUInstance): Unit = TODO()
fun wgpuInstanceRequestAdapter(handler: WGPUInstance, options: WGPURequestAdapterOptions): Unit = TODO()
fun wgpuInstanceWaitAny(handler: WGPUInstance, futureCount: ULong, futures: WGPUFutureWaitInfo, timeoutNS: ULong): WGPUWaitStatus = TODO()
fun wgpuPipelineLayoutSetLabel(handler: WGPUPipelineLayout, label: CString): Unit = TODO()
fun wgpuQuerySetSetLabel(handler: WGPUQuerySet, label: CString): Unit = TODO()
fun wgpuQuerySetGetType(handler: WGPUQuerySet): WGPUQueryType = TODO()
fun wgpuQuerySetGetCount(handler: WGPUQuerySet): UInt = TODO()
fun wgpuQuerySetDestroy(handler: WGPUQuerySet): Unit = TODO()
fun wgpuQueueSubmit(handler: WGPUQueue, commands: Long): Unit = TODO()
fun wgpuQueueOnSubmittedWorkDone(handler: WGPUQueue): Unit = TODO()
fun wgpuQueueWriteBuffer(handler: WGPUQueue, buffer: WGPUBuffer, bufferOffset: ULong, data: NativeAddress, size: ULong): Unit = TODO()
fun wgpuQueueWriteTexture(handler: WGPUQueue, destination: WGPUImageCopyTexture, data: NativeAddress, dataSize: ULong, dataLayout: WGPUTextureDataLayout, writeSize: WGPUExtent3D): Unit = TODO()
fun wgpuQueueSetLabel(handler: WGPUQueue, label: CString): Unit = TODO()
fun wgpuRenderBundleSetLabel(handler: WGPURenderBundle, label: CString): Unit = TODO()
fun wgpuRenderBundleEncoderSetPipeline(handler: WGPURenderBundleEncoder, pipeline: WGPURenderPipeline): Unit = TODO()
fun wgpuRenderBundleEncoderSetBindGroup(handler: WGPURenderBundleEncoder, groupIndex: UInt, group: WGPUBindGroup, dynamicOffsets: Long): Unit = TODO()
fun wgpuRenderBundleEncoderDraw(handler: WGPURenderBundleEncoder, vertexCount: UInt, instanceCount: UInt, firstVertex: UInt, firstInstance: UInt): Unit = TODO()
fun wgpuRenderBundleEncoderDrawIndexed(handler: WGPURenderBundleEncoder, indexCount: UInt, instanceCount: UInt, firstIndex: UInt, baseVertex: Int, firstInstance: UInt): Unit = TODO()
fun wgpuRenderBundleEncoderDrawIndirect(handler: WGPURenderBundleEncoder, indirectBuffer: WGPUBuffer, indirectOffset: ULong): Unit = TODO()
fun wgpuRenderBundleEncoderDrawIndexedIndirect(handler: WGPURenderBundleEncoder, indirectBuffer: WGPUBuffer, indirectOffset: ULong): Unit = TODO()
fun wgpuRenderBundleEncoderInsertDebugMarker(handler: WGPURenderBundleEncoder, markerLabel: CString): Unit = TODO()
fun wgpuRenderBundleEncoderPopDebugGroup(handler: WGPURenderBundleEncoder): Unit = TODO()
fun wgpuRenderBundleEncoderPushDebugGroup(handler: WGPURenderBundleEncoder, groupLabel: CString): Unit = TODO()
fun wgpuRenderBundleEncoderSetVertexBuffer(handler: WGPURenderBundleEncoder, slot: UInt, buffer: WGPUBuffer, offset: ULong, size: ULong): Unit = TODO()
fun wgpuRenderBundleEncoderSetIndexBuffer(handler: WGPURenderBundleEncoder, buffer: WGPUBuffer, format: WGPUIndexFormat, offset: ULong, size: ULong): Unit = TODO()
fun wgpuRenderBundleEncoderFinish(handler: WGPURenderBundleEncoder, descriptor: WGPURenderBundleDescriptor): WGPURenderBundle = TODO()
fun wgpuRenderBundleEncoderSetLabel(handler: WGPURenderBundleEncoder, label: CString): Unit = TODO()
fun wgpuRenderPassEncoderSetPipeline(handler: WGPURenderPassEncoder, pipeline: WGPURenderPipeline): Unit = TODO()
fun wgpuRenderPassEncoderSetBindGroup(handler: WGPURenderPassEncoder, groupIndex: UInt, group: WGPUBindGroup, dynamicOffsets: Long): Unit = TODO()
fun wgpuRenderPassEncoderDraw(handler: WGPURenderPassEncoder, vertexCount: UInt, instanceCount: UInt, firstVertex: UInt, firstInstance: UInt): Unit = TODO()
fun wgpuRenderPassEncoderDrawIndexed(handler: WGPURenderPassEncoder, indexCount: UInt, instanceCount: UInt, firstIndex: UInt, baseVertex: Int, firstInstance: UInt): Unit = TODO()
fun wgpuRenderPassEncoderDrawIndirect(handler: WGPURenderPassEncoder, indirectBuffer: WGPUBuffer, indirectOffset: ULong): Unit = TODO()
fun wgpuRenderPassEncoderDrawIndexedIndirect(handler: WGPURenderPassEncoder, indirectBuffer: WGPUBuffer, indirectOffset: ULong): Unit = TODO()
fun wgpuRenderPassEncoderExecuteBundles(handler: WGPURenderPassEncoder, bundles: Long): Unit = TODO()
fun wgpuRenderPassEncoderInsertDebugMarker(handler: WGPURenderPassEncoder, markerLabel: CString): Unit = TODO()
fun wgpuRenderPassEncoderPopDebugGroup(handler: WGPURenderPassEncoder): Unit = TODO()
fun wgpuRenderPassEncoderPushDebugGroup(handler: WGPURenderPassEncoder, groupLabel: CString): Unit = TODO()
fun wgpuRenderPassEncoderSetStencilReference(handler: WGPURenderPassEncoder, reference: UInt): Unit = TODO()
fun wgpuRenderPassEncoderSetBlendConstant(handler: WGPURenderPassEncoder, color: WGPUColor): Unit = TODO()
fun wgpuRenderPassEncoderSetViewport(handler: WGPURenderPassEncoder, x: Float, y: Float, width: Float, height: Float, minDepth: Float, maxDepth: Float): Unit = TODO()
fun wgpuRenderPassEncoderSetScissorRect(handler: WGPURenderPassEncoder, x: UInt, y: UInt, width: UInt, height: UInt): Unit = TODO()
fun wgpuRenderPassEncoderSetVertexBuffer(handler: WGPURenderPassEncoder, slot: UInt, buffer: WGPUBuffer, offset: ULong, size: ULong): Unit = TODO()
fun wgpuRenderPassEncoderSetIndexBuffer(handler: WGPURenderPassEncoder, buffer: WGPUBuffer, format: WGPUIndexFormat, offset: ULong, size: ULong): Unit = TODO()
fun wgpuRenderPassEncoderBeginOcclusionQuery(handler: WGPURenderPassEncoder, queryIndex: UInt): Unit = TODO()
fun wgpuRenderPassEncoderEndOcclusionQuery(handler: WGPURenderPassEncoder): Unit = TODO()
fun wgpuRenderPassEncoderEnd(handler: WGPURenderPassEncoder): Unit = TODO()
fun wgpuRenderPassEncoderSetLabel(handler: WGPURenderPassEncoder, label: CString): Unit = TODO()
fun wgpuRenderPipelineGetBindGroupLayout(handler: WGPURenderPipeline, groupIndex: UInt): WGPUBindGroupLayout = TODO()
fun wgpuRenderPipelineSetLabel(handler: WGPURenderPipeline, label: CString): Unit = TODO()
fun wgpuSamplerSetLabel(handler: WGPUSampler, label: CString): Unit = TODO()
fun wgpuShaderModuleGetCompilationInfo(handler: WGPUShaderModule): Unit = TODO()
fun wgpuShaderModuleSetLabel(handler: WGPUShaderModule, label: CString): Unit = TODO()
fun wgpuSurfaceConfigure(handler: WGPUSurface, config: WGPUSurfaceConfiguration): Unit = TODO()
fun wgpuSurfaceGetCapabilities(handler: WGPUSurface, adapter: WGPUAdapter, capabilities: WGPUSurfaceCapabilities): Boolean = TODO()
fun wgpuSurfaceGetCurrentTexture(handler: WGPUSurface, surfaceTexture: WGPUSurfaceTexture): Unit = TODO()
fun wgpuSurfacePresent(handler: WGPUSurface): Unit = TODO()
fun wgpuSurfaceUnconfigure(handler: WGPUSurface): Unit = TODO()
fun wgpuSurfaceSetLabel(handler: WGPUSurface, label: CString): Unit = TODO()
fun wgpuTextureCreateView(handler: WGPUTexture, descriptor: WGPUTextureViewDescriptor): WGPUTextureView = TODO()
fun wgpuTextureSetLabel(handler: WGPUTexture, label: CString): Unit = TODO()
fun wgpuTextureGetWidth(handler: WGPUTexture): UInt = TODO()
fun wgpuTextureGetHeight(handler: WGPUTexture): UInt = TODO()
fun wgpuTextureGetDepthOrArrayLayers(handler: WGPUTexture): UInt = TODO()
fun wgpuTextureGetMipLevelCount(handler: WGPUTexture): UInt = TODO()
fun wgpuTextureGetSampleCount(handler: WGPUTexture): UInt = TODO()
fun wgpuTextureGetDimension(handler: WGPUTexture): WGPUTextureDimension = TODO()
fun wgpuTextureGetFormat(handler: WGPUTexture): WGPUTextureFormat = TODO()
fun wgpuTextureGetUsage(handler: WGPUTexture): ULong = TODO()
fun wgpuTextureDestroy(handler: WGPUTexture): Unit = TODO()
fun wgpuTextureViewSetLabel(handler: WGPUTextureView, label: CString): Unit = TODO()
